name: Continuous Delivery
# This workflow is triggered on pushes to the repository.
on:
  [push]
#  push:
#    branches:
#      - master

jobs:
  build:
    name: Build Docker Image and Push to Amazon ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nest-blogmatica
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $GITHUB_WORKSPACE
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Setup kubeconfig
        id: setup-kubeconfig
        env:
          AWS_REGION: us-east-1
          EKS_CLUSTER_NAME: blogmatica-dev3
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
      - name: Deploy k8s yaml
        id: deploy-k8s-yaml
        env:
          K8S_YAML_DIR: ./manifests
          IMAGE_NAME: ${{ steps.build-image.outputs.image }}
        run: |
          cd $K8S_YAML_DIR
          sed 's/blogmaticaimage/${IMAGE_NAME}/g' blogmatica.yaml
          kubectl apply -f -


#          # Setup kustomize
#          cd $K8S_YAML_DIR
#          curl -s -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#          chmod u+x ./kustomize
#          ./kustomize edit set image blogmatica-template-image=$IMAGE_NAME
#          ./kustomize build . | kubectl apply -f -
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}